- name: breakpoint on single line closure with args
  type: breakpoint
  in_block: true
  before: |
    |arg, arg| result;
  after: |
    |arg, arg| {
        result
    };
- name: breakpoint on single expr block and args
  type: breakpoint
  in_block: true
  before: |
    |arg, arg| {
        result
    };
  after: |
    |
        arg,
        arg,
    | result;
- name: return type and small expression
  type: no_change
  in_block: true
  formatted: |
    || -> Foo { x }
- name: closure with multi-line chain
  type: before_after
  in_block: true
  before: |
    let x = || aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
        + aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
        + aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;
  after: |
    let x = || {
        aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
            + aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
            + aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
    };
- name: body is simple match
  type: before_after
  in_block: true
  before: |
    let x = || {
        match x {
            _ => {}
        }
    };
  after: |
    let x = || match x {
        _ => {}
    };
- name: body is call with closure
  type: before_after
  in_block: true
  before: |
    || foo(|| {
        x;
    })
  after: |
    || {
        foo(|| {
            x;
        })
    }
- name: breakpoint on closure with args inside args list
  type: breakpoint
  in_block: true
  before: |
   foo(first_arg, |arg, arg| {
       result
   })
  after: |
    foo(
        first_arg,
        |arg, arg| result,
    )
