- name: leading pipe
  type: before_after
  in_block: true
  before: |
    match x {
        | () => {}
    }
  after: |
    match x {
        () => {}
    }
- name: remove needless block
  type: before_after
  in_block: true
  before: |
    match x {
        X => {
            x
        }
    }
  after: |
    match x {
        X => x,
    }
- name: remove comma after block
  type: before_after
  in_block: true
  before: |
    match x {
        _ => {
            let x;
        },
    }
  after: |
    match x {
        _ => {
            let x;
        }
    }
- name: arm body breakpoint add block
  type: breakpoint
  in_block: true
  before: |
    match x {
        _ => [asdfasdf],
    }
  after: |
    match x {
        _ => {
            [asdfasdf]
        }
    }
- name: arm body breakpoint remove block
  type: breakpoint
  in_block: true
  before: |
    match x {
        _ => {
            [asdfasdf]
        }
    }
  after: |
    match x {
        _ => [
            asdfasdf,
        ],
    }
- name: arm body is long list that fits on one line iff wrapped in a block
  type: before_after
  in_block: true
  before: |
    match X {
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP => [LLLL, LLLL, LLLL, LLLL, LLLL, LLLL, LLLL],
    }
  after: |
    match X {
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP => {
            [LLLL, LLLL, LLLL, LLLL, LLLL, LLLL, LLLL]
        }
    }
- name: arm body is chain on multiple lines with final multiline method call
  type: no_change
  in_block: true
  formatted: |
    match x {
        x => {
            aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
                .aaaaaaaaaaaaaa({
                    let x;
                })
        }
    }
- name: arm body is chain on single line except final multiline method call
  type: no_change
  in_block: true
  formatted: |
    match x {
        x => a.b.aaaaaaa({
            let x;
        }),
    }
- name: arm body is chain with all overflowing method calls
  type: before_after
  in_block: true
  before: |
    match x {
        x => aaaaaaa({
            let x;
        })
        .aaaaaaa({
            let x;
        }),
    }
  after: |
    match x {
        x => {
            aaaaaaa({
                let x;
            })
            .aaaaaaa({
                let x;
            })
        }
    }
- name: arm body is multi-line range
  type: before_after
  in_block: true
  before: |
    match x {
        x => [{
            let x;
        }]..[{
            let x;
        }]
    }
  after: |
    match x {
        x => {
            [{
                let x;
            }]..[{
                let x;
            }]
        }
    }
- name: comment in first line of arm block that prevents block removal
  type: no_change
  in_block: true
  formatted: |
    match x {
        _ => {
            // comment
            foo()
        }
    }
- name: comma after arm block where block is removed
  type: before_after
  in_block: true
  before: |
    match x {
        _ => {
            x
        },
    }
  after: |
    match x {
        _ => x,
    }
- name: multi-line chain
  type: no_change
  in_block: true
  formatted: |
    match x {
        PPPPPPPPPPPPPPPPPPPP => {
            ccccccccccccccccccccccccccccccc
                .cccccccccc
                .cccccccccccccccccc
        }
    }
- name: guard on separate line and plain, single-expression block
  type: no_change
  in_block: true
  formatted: |
    match x {
        TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT
            if CCCCCCCCCCCCCCCCCCCCCCCCCCCCCC =>
        {
            x
        }
    }

- name: guard on separate line and plain, multi-statement block
  type: no_change
  in_block: true
  formatted: |
    match x {
        TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT
            if CCCCCCCCCCCCCCCCCCCCCCCCCCCCCC =>
        {
            let x;
            x
        }
    }
- name: scrutinee is multi-line array
  type: no_change
  in_block: true
  formatted: |
    match [
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA,
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA,
    ] {
        x => {}
    }
- name: scrutinee is multi-line chain
  type: no_change
  in_block: true
  formatted: |
    match aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
        .bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
        .cccccccccccccccccccccccccccccccc
    {
        x => {}
    }
